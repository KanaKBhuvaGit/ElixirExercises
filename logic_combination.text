"Start: combination(m, [h | t])"
3
8
[5, 3, 9, 6, 4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
2
5
[3, 9, 6, 4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
1
3
[9, 6, 4]
"End: combination(m, [h | t])"
"combination(0, _)"

"Start: combination(m, [h | t]) -- for"
3
[]
[3]
"Start: combination(m, [h | t]) -- for end"

"Start: combination(m, [h | t])"
1
9
[6, 4]
"End: combination(m, [h | t])"
"combination(0, _)"

"Start: combination(m, [h | t]) -- for"
9
[]
'\t'
"Start: combination(m, [h | t]) -- for end"

"Start: combination(m, [h | t])"
1
6
[4]
"End: combination(m, [h | t])"
"combination(0, _)"

"Start: combination(m, [h | t]) -- for"
6
[]
[6]
"Start: combination(m, [h | t]) -- for end"

"Start: combination(m, [h | t])"
1
4
[]
"End: combination(m, [h | t])"
"combination(0, _)"

"Start: combination(m, [h | t]) -- for"
4
[]
[4]
"Start: combination(m, [h | t]) -- for end"

"combination(_, [])"

"Start: combination(m, [h | t]) -- for"
5
[3]
[5, 3]
"Start: combination(m, [h | t]) -- for end"

"Start: combination(m, [h | t]) -- for"
5
'\t'
[5, 9]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
5
[6]
[5, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
5
[4]
[5, 4]
"Start: combination(m, [h | t]) -- for end"

"Start: combination(m, [h | t])"
2
3
[9, 6, 4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
1
9
[6, 4]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
9
[]
'\t'
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
1
6
[4]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
6
[]
[6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
1
4
[]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
4
[]
[4]
"Start: combination(m, [h | t]) -- for end"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
3
'\t'
[3, 9]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
3
[6]
[3, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
3
[4]
[3, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
2
9
[6, 4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
1
6
[4]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
6
[]
[6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
1
4
[]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
4
[]
[4]
"Start: combination(m, [h | t]) -- for end"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
9
[6]
[9, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
9
[4]
[9, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
2
6
[4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
1
4
[]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
4
[]
[4]
"Start: combination(m, [h | t]) -- for end"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
6
[4]
[6, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
2
4
[]
"End: combination(m, [h | t])"
"combination(_, [])"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
8
[5, 3]
[8, 5, 3]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
8
[5, 9]
[8, 5, 9]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
8
[5, 6]
[8, 5, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
8
[5, 4]
[8, 5, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
8
[3, 9]
[8, 3, 9]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
8
[3, 6]
[8, 3, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
8
[3, 4]
[8, 3, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
8
[9, 6]
[8, 9, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
8
[9, 4]
[8, 9, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
8
[6, 4]
[8, 6, 4]
"Start: combination(m, [h | t]) -- for end"

"Start: combination(m, [h | t])"
3
5
[3, 9, 6, 4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
2
3
[9, 6, 4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
1
9
[6, 4]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
9
[]
'\t'
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
1
6
[4]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
6
[]
[6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
1
4
[]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
4
[]
[4]
"Start: combination(m, [h | t]) -- for end"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
3
'\t'
[3, 9]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
3
[6]
[3, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
3
[4]
[3, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
2
9
[6, 4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
1
6
[4]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
6
[]
[6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
1
4
[]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
4
[]
[4]
"Start: combination(m, [h | t]) -- for end"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
9
[6]
[9, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
9
[4]
[9, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
2
6
[4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
1
4
[]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
4
[]
[4]
"Start: combination(m, [h | t]) -- for end"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
6
[4]
[6, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
2
4
[]
"End: combination(m, [h | t])"
"combination(_, [])"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
5
[3, 9]
[5, 3, 9]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
5
[3, 6]
[5, 3, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
5
[3, 4]
[5, 3, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
5
[9, 6]
[5, 9, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
5
[9, 4]
[5, 9, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
5
[6, 4]
[5, 6, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
3
3
[9, 6, 4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
2
9
[6, 4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
1
6
[4]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
6
[]
[6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
1
4
[]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
4
[]
[4]
"Start: combination(m, [h | t]) -- for end"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
9
[6]
[9, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
9
[4]
[9, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
2
6
[4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
1
4
[]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
4
[]
[4]
"Start: combination(m, [h | t]) -- for end"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
6
[4]
[6, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
2
4
[]
"End: combination(m, [h | t])"
"combination(_, [])"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
3
[9, 6]
[3, 9, 6]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
3
[9, 4]
[3, 9, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t]) -- for"
3
[6, 4]
[3, 6, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
3
9
[6, 4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
2
6
[4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
1
4
[]
"End: combination(m, [h | t])"
"combination(0, _)"
"Start: combination(m, [h | t]) -- for"
4
[]
[4]
"Start: combination(m, [h | t]) -- for end"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
6
[4]
[6, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
2
4
[]
"End: combination(m, [h | t])"
"combination(_, [])"
"combination(_, [])"
"Start: combination(m, [h | t]) -- for"
9
[6, 4]
[9, 6, 4]
"Start: combination(m, [h | t]) -- for end"
"Start: combination(m, [h | t])"
3
6
[4]
"End: combination(m, [h | t])"
"Start: combination(m, [h | t])"
2
4
[]
"End: combination(m, [h | t])"
"combination(_, [])"
"combination(_, [])"
"Start: combination(m, [h | t])"
3
4
[]
"End: combination(m, [h | t])"
"combination(_, [])"
"combination(_, [])"